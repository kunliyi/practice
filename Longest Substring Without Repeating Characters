//Given a string, find the length of the longest substring without repeating characters.

class Solution {
    public static int lengthOfLongestSubstring(String s) {
        int sum = 0;
        StringBuilder sb = new StringBuilder();
        for(int i = 0; i<s.length(); i++){
            int pos = sb.toString().indexOf(s.charAt(i));
            if(pos >= 0){       //check if char exists in stringbuilder sb
                if(sb.length()>sum)     
                    sum = sb.length();
                sb = sb.delete(0, pos+1).append(s.charAt(i));   //delete all chars from repeated char and before
            }
            else{
                sb.append(s.charAt(i));
            }
        }
        if(sb.length()>sum)
            sum = sb.length();
        return sum;
            
    }
}
